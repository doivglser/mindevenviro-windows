#!/bin/bash
# mindevenviro-windows search
# I use dos2unix to convert file endings
###	WARNING: DON'T EDIT ANYTHING BELOW ###

LANG="C";
IFS="$(echo -en "\n\b")" ;
line='';
pause="0";
			if [[ "$EUID" != "0" ]] ;
		then
	echo -e "sudo search -h :: please\n" ;
	help_function ;
else

# temp folder
		if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ;
	then
		tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
	else
		tmpfolder="/tmp" ;
fi
# temp folder END

touch $tmpfolder/line.search ;

help_function(){
echo -e "\nUsage: sudo search [-s|--search] [PATH] [TOSEARCH] [TOGREP] [TOEXCLUDE]\n
SEARCH THE DRIVE\n
 This script searches your drive\r
 for everything in it, and displays on the Terminal.\r
 Finds: log files, example code, .conf to edit...\n
 [PATH]: the absolute path like: /var/
 [TOSEARCH]: search pattern\r
 [TOGREP]: search a word in file\r
 [TOEXCLUDE]: a word you want to exclude from your search results.\n" ;
exit 0 ;
}

searchStat(){
#echo "searchStat function"
	echo -e "search $(date) :: as $SUDO_USER :: in $(uname -n) :: $path $exclud3 $togrep $exclud3 ::" >>"/home/$SUDO_USER/.wH0rUNSon" && wait ;
}

#exithandler
exitHandl3R(){
#echo "exitHandl3R function"
	searchStat;
	pgrep less | awk "{print $1}" | xargs kill -15 2>/dev/null ; 
	pgrep nano | awk "{print $1}" | xargs kill -15 2>/dev/null ; 
	pgrep mupdf | awk "{print $1}" | xargs kill -15 2>/dev/null ;
	echo -e "\n ... good bye $SUDO_USER" ;
	exit 0 ;
}

display(){
#echo "display function"
# display	
			# uS3F is the owner of the file
			uS3F=$(ls -sl "$filename" | awk '{print $4}' | tr -d '\ ');
###
				if [[ $(echo "$filename" | xargs basename | sed 's/\./\ /g' | awk '{print $2}') =~ 'conf'|'ini'|'config' ]] \
				&& [[ ! $(echo "$filename" | xargs file) =~ 'shared'|'dynamically'|'interpreter' ]]; # to not open binaries
			then
				pause="1" ;
				opener="nano";
				return ;

				# count with dd magic number 20 to determine the file type to be editet and not to open binaries
				elif [[ $(dd if="$filename" bs=20 count=1 | tr '\0' '\n') =~ 'bash'|'perl'|'php'|'python'|'sh' ]] \
				&& [[ ! $(echo "$filename" | xargs file) =~ 'shared'|'dynamically'|'interpreter' ]];
			then
				pause="1" ;
				opener="nano";
				return ;

				elif [[ ! $(echo "$filename" | xargs file) =~ PDF|PHP|script|ASCII|text|TEXT|HTML|XML ]] \
				&& [[ ! $(echo "$filename" | xargs file) =~ 'shared'|'dynamically'|'interpreter' ]];
			then
				pause="0" ;
				echo -e " ... no PDF|PHP|script|ASCII|text|TEXT|HTML|XML \r" ;
			else
				pause="0" ;
				echo -e " ... $(echo $filename | xargs file) ::\r" ;
		fi
###
			if [[ ! $(echo "$filename" | xargs basename | sed 's/\./\ /g' | awk '{print $2}') =~ 'conf'|'ini'|'config' ]] \
				&& [[ ! $(echo "$filename" | xargs file) =~ 'shared'|'dynamically'|'interpreter' ]] ;
		then
			pause="1" ;
			opener="less";
			return ;
		
			elif [[ $(dpkg -l | grep mupdf | awk '{print $2}') != '' ]] && [[ $(echo "$filename" | xargs file) =~ PDF ]] ;
		then
			pause="1" ;
			opener="mupdf";
			return ;
		else
			pause="0" ;
			echo -e " ... no PDF viewer installed, or you are in Windows \r" ;
			echo -e " ... $(echo $filename | xargs file) ::\r" ;
		fi
###
#display END
}

# search query
eingabe(){
#echo "eingabe function"

		while read line
	do
		if [[ "$togrep" != '' ]] && [[ "$exclud3" = '' ]] ;
	then
		filename=$line;
		cat $line | grep -E $togrep >| "$tmpfolder/line.search" ;
		echo $filename >> "$tmpfolder/line.search" ;
		line="$tmpfolder/line.search" ;
		
		if [[ ! $(echo $tmpfolder/line.search | xargs file | cut -f2 -d:) =~ '(no magic)'|'empty' ]];
	then
		display ;
fi
		elif [[ "$exclud3" != '' ]] && [[ "$togrep" != '' ]] ;
	then
		filename=$line;
		cat $line | grep -E $togrep | grep -vE $exclud3 >| "$tmpfolder/line.search" ;
		echo $filename >> "$tmpfolder/line.search" ;
		line="$tmpfolder/line.search" ;
		
		if [[ ! $(echo $tmpfolder/line.search | xargs file | cut -f2 -d:) =~ '(no magic)'|'empty' ]];
	then
		display ;
	fi
fi
done<<<"$line";
}
# search query		END#

# Main function
main(){
#echo "main function"
searchP4th="$2";
searchP4ttern="$3";
togrep="$4";
exclud3="$5";
					trap 'exitHandl3R' SIGINT ;

			if  [[ "$exclud3" != '' ]] || [[ "$togrep" != '' ]] ;
		then
				for line in $(find $searchP4th -name *$searchP4ttern* -type f) ;
			do
				if [ $pause = 1 ] ;
			then
				sudo -u "$uS3F" "$opener" "$filename" ;
				sleep 1 ;
				echo "-" ;
				printf " ...enter to continue: " ; read -r ;
				echo "-" ;
				eingabe ;
			fi
			
				if [ $pause = 0 ] ;
			then
				eingabe ;
			fi
			done
	else
			help_function ;
fi
}

# ASK
  case "$1" in
		-s|--search)
        toshiffta=0 ;
        shift "$toshiffta" ;		
		main "$@" ;
        ;;
        -h|--help)
        toshiffta=0 ;
        shift "$toshiffta" ;
		help_function "$@" ;
        ;;
esac
# ASK END
fi
