#!/bin/bash
#
# :: mindevenviro "mde-setup" (install script; "mind eve n viro" SETUP)					  ::
# ::																					  ::
# Windows 10 version compatibility for debian App with the Microsoft Windows Subsystem Linux
#
###			WARNING:	DON'T EDIT ANYTHING BELOW !!!	###

LANG="C";
myPrograms="tidy mercurial libjson-glib-dev zip rar openssl nmap clamav-freshclam clamav-milter clamav-testfiles clamdscan clamassassin clamav clamav-base clamav-daemon php7.0 php7.0-cli php7.0-mcrypt php7.0-intl php7.0-mysql php7.0-curl php7.0-gd php7.0-soap php7.0-xml php7.0-zip php7.0-readline php7.0-opcache php7.0-json php7.0-gd dwww apache2 libmariadbclient-dev-compat default-libmysqlclient-dev mariadb-client mariadb-common mariadb-server sendmail python-gtk2-dbg liblwp-protocol-socks-perl libcgi-pm-perl perl nmon figlet mc mutt nano " ;
environinstall="monitors/codecounter monitors/status monitors/logdiskussage edit/search edit/sCRYPtUPdater maintenance/mysql_cp_db maintenance/set_mysql_passwd mde-setup " ;
readonly empty='';
		if [ ! $EUID = 0 ];
	then
		echo "USAGE: sudo mde-setup"
		exit 0 ;
else
		# tmp folder
		if [[ "$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" != '' ]] ;
	then
		tmpfolder="$(df -h | grep -E shm$ | cut -f2 -d% | tr -d '\ ')" ;
	else
		tmpfolder="/tmp" ;
fi
# tmp folder END

	# update /etc/hosts
	configs/./update_hosts &
	wait ;

		# environinstall
		if [[ $PWD =~ 'mindevenviro' ]] ;
	then
		nNuM1=$(echo "$environinstall" | wc -w) ;
		spin2='-\|/' ;

		while [[ "$nNuM1" != "0" ]] ;
	do
		clear ;
		toCopyPath=$(awk '{print $'"$nNuM1"'}'<<<"$environinstall") ;
		fFILE=$(basename $toCopyPath) ;
		sudo cp -f "$PWD/$toCopyPath" "/usr/local/bin/$fFILE" ;
		sudo chown root:root "/usr/local/bin/$fFILE" ;
		sudo chmod 4755 "/usr/local/bin/$fFILE" ;
		sudo chmod u+s "/usr/local/bin/$fFILE" &&
		echo -e "\n ... copying files ::\n" ;
		i=$(( (i+1) %4 )) ; printf "\r ... ${spin2:$i:1} $fFILE ." | tee -a "/home/$SUDO_USER/.installed" ; sleep .1 ;
		((nNuM1--)) ;
done

# environinstall END ...

		if [ -e /root/.vendorsmac ] ;
	then
		echo -e ".vendors macs allready saved" ;
	else
		echo -e "\n ... save vendors MAC-Address" ;
		touch "/root/.vendorsmac" ;
		ip link show | grep ether | awk '{print $2}' | tee "/root/.vendorsmac" ;
		chmod 0664 "/root/.vendorsmac" ;
fi
		echo -e "\n ... if you not have a WiFi device on your Board, then install one please !\n you must have only one WiFi Interface up OR one Wired.\n" ;

		if [ -e /root/.interfaces ] ;
	then
		echo -e ".interfaces allready saved" ;
	else
		echo -e "\n ... save interfaces" ;
		touch "/root/.interfaces" ;
		ip link | cut -f2 -d: | grep -E '\ ' | tr -d '\ ' | grep -v lo | tee "/root/.interfaces" ;
		chmod 0664 "/root/.interfaces" ;
fi
	echo -e "\r\n ... clearing files" ;
	
	rm -f /etc/apache2/sites-enabled/000-default.conf 2>/dev/null ;

	# by an update clear from double entries in apache2.conf
	sed -e '/ServerName /d' /etc/apache2/apache2.conf >| $tmpfolder/apache2.conf 2>/dev/null ;
	cp -f $tmpfolder/apache2.conf /etc/apache2/apache2.conf 2>/dev/null ;

	# by an update clear from double entries in apache2.conf
	sed -e '/Listen /d' /etc/apache2/apache2.conf >| $tmpfolder/apache2.conf 2>/dev/null ;
	cp -f $tmpfolder/apache2.conf /etc/apache2/apache2.conf 2>/dev/null ;

	# by an update clear from double entries in clamd.conf
	sed -e '/ScanOnAccess /d' /etc/clamav/clamd.conf  >| $tmpfolder/clamd.conf 2>/dev/null ;
	cp -f $tmpfolder/clamd.conf /etc/clamav/clamd.conf 2>/dev/null ;

	# by an update clear from double entries in clamd.conf
	sed -e '/OnAccessMountPath /d' /etc/clamav/clamd.conf  >| $tmpfolder/clamd.conf 2>/dev/null ;
	cp -f $tmpfolder/clamd.conf /etc/clamav/clamd.conf 2>/dev/null ;

	echo -e "\n ... create /home/$SUDO_USER Directories";
	mkdir -p /home/$SUDO_USER/{testphp,testbash,testperl,testpython,Downloads};
	chown -R $SUDO_USER:$SUDO_USER /home/$SUDO_USER;

	echo -e "\n ... I'm going to install programs\n ... copy sources.list" ;
	cp -f configs/etc/sources.list /etc/apt/sources.list ;

	# set conf file for mysql maintenance
	
		if [[ "$(ls /etc/*)" =~ mysql_cp_db_password.conf ]];
	then
		echo -e "\n/etc/mysql_cp_db_password.conf allready exists\n" ;
	else
		cp -f configs/etc/mysql_cp_db_password.conf /etc/mysql_cp_db_password.conf ;
	fi
	
	# to not install systemd related packages
	echo -e 'Package: *systemd*\nPin: release *\nPin-Priority: -1\n' > /etc/apt/preferences.d/systemd ;
	# install
	apt --fix-broken install ;
	apt-get -f -y -m install dirmngr git sudo gksu gnupg ;

	# update upgrade
	echo -e "\n ... update upgrade clean and autoremove" ;
	apt-get update && apt-get -f -y -m --allow-change-held-packages upgrade ;

	printf "your email-address on github.com: "; read eM4il ;

		if	[[ "$eM4il" != '' ]] ;
	then
		sudo -u $SUDO_USER ssh-keygen -t rsa -b 4096 -C "$eM4il" ;
		eX1tC0de=$(echo $?) ;
		wait ;

		if [[ "$eX1tC0de" != 0 ]] ;
	then
		echo -e "\n REMEMBER ssh-keygen -t rsa -b 4096 -C your-email@server.tld \nto add a github.com account" | tee -a /home/$SUDO_USER/.installed ;
	else
		cat /home/$SUDO_USER/.ssh/id_rsa.pub >| /home/$SUDO_USER/yourGitHubSSHkey ;
		echo -e "\n REMEMBER /home/$SUDO_USER/yourGitHubSSHkey, to add as a new SSH-Key under preferences in your github.com web-account." | tee -a /home/$SUDO_USER/.installed ;
		sed -n "s/eval\ //p" /home/$SUDO_USER/.bashrc ; 
		echo "eval $(ssh-agent -s)" >> /home/$SUDO_USER/.bashrc ;
		sed -n "s/ssh-add\ //p" /home/$SUDO_USER/.bashrc ; 
		echo "ssh-add ~/.ssh/id_rsa" >> /home/$SUDO_USER/.bashrc ;
		sudo -u $SUDO_USER ssh -T git@github.com ;
		sudo -u $SUDO_USER ssh-keygen -p ;
	fi
	else
		echo " no github.com email."
fi
		# install debian apps
		nNuM2=$(echo "$myPrograms" | wc -w) ;

		until [[ "$nNuM2" = "0" ]] ;
	do
		toInst=$(awk '{print $'"$nNuM2"'}'<<<"$myPrograms") ;

		if [[ "$(dpkg -l | awk '{print $2}' | sed -n "/^$toInst$/p")" != '' ]] ;
	then
		printf "\r ... testing for apps, $nNuM2 remaining" ; sleep .1 ; ((nNuM2--)) ;
	else
		if [[ "$toInst" = "sysvinit-core" ]] ;
	then
		# change the physiology to original
		apt-get -f -m -y --allow-change-held-packages install "$toInst" | tee -a "/home/$SUDO_USER/.installed" ;
		wait ;
		sleep 1 ;
		apPR="$toInst, INSTALLED!" ;
		echo -e "\n$apPR" | tee -a "/home/$SUDO_USER/.installed" ;
		cp -f /usr/share/sysvinit/inittab /etc/inittab ;
		((nNuM2--)) ;
		eX1tC0de=$(echo $?);
		wait;
else
		echo -e "\ninstalling ${toInst}..." ;
		apt-get -f -m -y --allow-change-held-packages install "$toInst" | tee -a "/home/$SUDO_USER/.installed" ;
		eX1tC0de=$(echo $?);
		wait;

		if [[ "$eX1tC0de" != 0 ]];
	then
		apt --fix-broken install ;
	else
		wait ;
		sleep 1 ;
		apPR="$toInst, INSTALLED!" ;
		echo -e "\n$apPR" | tee -a "/home/$SUDO_USER/.installed" ;
		((nNuM2--)) ;
	fi
fi
fi
		if [ "$nNuM2" = "0" ]
	then
		echo -e "\n ... apt-get done.";
		sleep 2;
fi
done

# install END

		if [[ "$(grep -E "root: ivo" /etc/aliases)" != '' ]] ;
	then
		echo -e "\n ... Alias Database newaliases allready build.\n if you want to do an other alias please edit /etc/aliases" ;
	else
		echo -e "\n ... updating /etc/aliases, this may take a while" ;
		echo "root: $SUDO_USER" >> /etc/aliases ;
		newaliases ;
		sleep 2 ;
		echo -e "\n ... /etc/aliases updated, you are able to read root mails." ;
fi

	echo -e "\n ... copy default apache2 site available" ;
	cp configs/000-default.conf /etc/apache2/sites-available/ ;
	chown -R $SUDO_USER:$SUDO_USER /etc/apache2/sites-available/000-default.conf ;

	echo -e "\n ... copy .bashrc" ;
	cp -f configs/bashrc /home/$SUDO_USER/.bashrc ;
	chmod 644 /home/$SUDO_USER/.bashrc ;

	# Apache2 setup
	echo -e "\n ... set the upload path for PHP scripts" ;
	rm -f /var/www/html/index*
	mkdir -p /var/www/html/{testphp,testperl} ; 2>/dev/null ;
	cp -f docs/manual/* /var/www/html/testphp/ ;
	chown -R www-data:www-data /var/www/html/ ;

	# Antivirus
	echo -e "ScanOnAccess True\nOnAccessMountPath /mnt/c/Users" | tee -a /etc/clamav/clamd.conf ;

# mkdir cgi-bin
mkdir -p /usr/lib/cgi-bin/ 2>/dev/null;
# add a ServerName to your conf
echo "ServerName $(hostname)" >> /etc/apache2/apache2.conf ;
echo "Listen 127.0.1.1:80" >> /etc/apache2/apache2.conf ;
# updates the address for localhost

		echo -e "\n ... update apache2 configuration" ;
		a2enmod cgid ;
		a2enmod proxy_http ;

		echo -e "\n ... restarting apache2 server" ;
		/etc/init.d/apache2 restart ;
		# Apache2 setup END

		echo -e "\n ... set the rights for .wH0rUNSon " ;

		if [ -e /home/$SUDO_USER/.wH0rUNSon ] ;
	then
		echo " ... .wH0rUNSon allready installed" | tee -a "/home/$SUDO_USER/.installed" ;
	else
		touch "/home/$SUDO_USER/.wH0rUNSon" && chown $SUDO_USER:$SUDO_USER "/home/$SUDO_USER/.wH0rUNSon" && chmod 0660 "/home/$SUDO_USER/.wH0rUNSon"  | tee -a "/home/$SUDO_USER/.installed" ;
fi
		# cleaning the environment
		apt-get clean &&
		apt -f -y -m autoremove ;
		echo -e "\n ... successfully_installed $(date), by $USER" | tee -a /home/$SUDO_USER/.installed ;
		echo -e "\n ... Congratulations we have M1ND3V3NV1R0 successfully installed!" ;
		# good bye
		echo "good bye $SUDO_USER" ;
		exit 0 ;

else
	echo -e "\n M1ND3V3NV1R0 allready installed!\n run this script from within the folder M1ND3V3NV1R0, after installation, system will restart." ;
	echo -e "\n you should be in the M1ND3V3NV1R0 folder."
	exit 0 ;
fi
fi
